using Microsoft.AspNetCore.Mvc;
using TrainingTask.Server.Models;
using Google.Cloud.Dialogflow.V2;
using Google.Protobuf;
using System.Text.Json;
using System.Threading.Tasks;

namespace TrainingTask.Server.Controllers
{
    [ApiController]
    [Route("api/[controller]")]
    public class ChatController : ControllerBase
    {
        private readonly ILogger<ChatController> _logger;
        private readonly IConfiguration _configuration;

        public ChatController(ILogger<ChatController> logger, IConfiguration configuration)
        {
            _logger = logger;
            _configuration = configuration;
        }

        [HttpPost]
        public async Task<IActionResult> ReceiveMessage([FromBody] ChatRequest request)
        {
            _logger.LogInformation(request.Message);

            var jsonCredsSection = _configuration.GetSection("JsonCreds");
            var projectId = jsonCredsSection["project_id"];
            var languageCode = "en"; // Or get from config if needed
            var credentialsJson = JsonSerializer.Serialize(
                jsonCredsSection.GetChildren().ToDictionary(x => x.Key, x => x.Value)
            );
            _logger.LogInformation("JsonCreds Section Raw JSON: {Value}", credentialsJson);

            if (string.IsNullOrEmpty(credentialsJson))
            {
                return BadRequest("Credentials JSON is not configured.");
            }

            // Create Dialogflow SessionsClient with credentials
            var builder = new SessionsClientBuilder
            {
                JsonCredentials = credentialsJson
            };
            var sessionsClient = await builder.BuildAsync();

            var sessionName = SessionName.FromProjectSession(projectId, request.SessionId);
            var queryInput = new QueryInput
            {
                Text = new TextInput
                {
                    Text = request.Message,
                    LanguageCode = languageCode
                }
            };

            var detectIntentRequest = new DetectIntentRequest
            {
                SessionAsSessionName = sessionName,
                QueryInput = queryInput
            };

            var response = await sessionsClient.DetectIntentAsync(detectIntentRequest);
            _logger.LogInformation("Dialogflow Response: {Response}", response);  

            var fulfillmentText = response.QueryResult.FulfillmentText;
            var intentName = response.QueryResult.Intent.DisplayName;
            Console.WriteLine($"Response: {fulfillmentText}");

            return Ok( new { fulfillmentText, intentName });
        }
    }
}
